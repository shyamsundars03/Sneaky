<!DOCTYPE html>
<html lang="en">
<head>
    <title>OTP Verification</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-image: url("/images/wall2.jpg");
            background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed;
            line-height: 1.6;
        }
        .container-form {
            max-width: 400px;
            margin: auto;
            padding: 60px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .btn-theme {
            background-color: red;
            color: white;
        }
        .btn-theme:hover {
            background-color: darkred;
            color: white;
        }
        .error-message {
            color: red;
            font-size: 0.875rem;
            min-height: 1.25rem;
            margin-top: 0.25rem;
        }
    </style>
</head>
<body>

    <div class="d-flex justify-content-center align-items-center vh-100">
        <div class="container-form">
            <h2 class="text-center fw-bold">OTP Verification</h2>
            <p class="text-muted text-center">Enter the OTP sent to your email</p>
            <form id="otpForm">
                <div class="mb-3">
                    <label class="form-label">OTP</label>
                    <input type="text" class="form-control" id="otp" placeholder="Enter OTP" maxlength="6">
                    <div id="otpError" class="error-message"></div>
                </div>
                <button type="submit" class="btn btn-theme w-100">Verify OTP</button>
                <p class="timer">Resend OTP in <span id="countdown">75</span> seconds</p>
                <button type="button" id="resendBtn" class="btn btn-theme w-100" disabled>Resend OTP</button>
            </form>
            <p class="text-center mt-3"><a href="/signin" class="text-decoration-none">Back to Sign In</a></p>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const otpForm = document.getElementById('otpForm');
            const otpField = document.getElementById('otp');
            const resendButton = document.getElementById('resendBtn');
            const countdownElement = document.getElementById('countdown');
    
            const validateField = (field, value) => {
                const errorDiv = field.nextElementSibling;
                let error = '';
    
                if (!value.trim()) {
                    error = `${field.placeholder} is required`;
                } else if (field.id === 'otp' && !/^\d{6}$/.test(value)) {
                    error = 'OTP must be a 6-digit number';
                }
    
                if (error) {
                    if (errorDiv && errorDiv.classList.contains('error-message')) {
                        errorDiv.textContent = error;
                    } else {
                        const div = document.createElement('div');
                        div.className = 'error-message';
                        div.textContent = error;
                        field.parentNode.insertBefore(div, field.nextSibling);
                    }
                    return false;
                }
    
                if (errorDiv && errorDiv.classList.contains('error-message')) {
                    errorDiv.remove();
                }
                return true;
            };
    
            // Fetch the remaining time from the backend
            fetch('/otp2-time')
                .then(response => response.json())
                .then(data => {
                    let remainingTime = data.remainingTime;
    
                    const startTimer = () => {
                        let interval = setInterval(() => {
                            remainingTime--;
                            countdownElement.textContent = remainingTime;
    
                            if (remainingTime <= 0) {
                                clearInterval(interval);
                                resendButton.removeAttribute("disabled");
                                countdownElement.textContent = "Timer ended!";
                            }
                        }, 1000);
                    };
    
                    startTimer();
                });
    
            otpForm.addEventListener('submit', async (e) => {
                e.preventDefault();
    
                if (!validateField(otpField, otpField.value)) return;
    
                // Fetch the remaining time again to ensure it's up-to-date
                const timeResponse = await fetch('/otp2-time');
                const timeData = await timeResponse.json();
                const remainingTime = timeData.remainingTime;
    
                // Check if the timer has ended
                if (remainingTime <= 0) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Timer Ended!',
                        text: 'Please click the resend button to generate a new OTP.',
                    });
                    return;
                }
    
                try {
                    const response = await fetch('/verify-otp', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ otp: otpField.value })
                    });
                    const data = await response.json();
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Verified!',
                            text: 'OTP verified successfully',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            window.location.href = '/reset-password';
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Invalid OTP',
                            text: data.message || 'Invalid OTP entered'
                        });
                    }
                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'Server error, please try again'
                    });
                }
            });
    
            resendButton.addEventListener("click", function () {
                fetch("/otp2-send", { method: "POST" })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'OTP Resent!',
                                text: 'New OTP has been sent to your email.',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            window.location.reload(); // Reload to reset the timer
                        }
                    });
            });
        });
    </script>
</body>
</html>