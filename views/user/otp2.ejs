<!DOCTYPE html>
<html lang="en">
<head>
    <title>OTP Verification</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-image: url("/images/wall2.jpg");
            background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed;
            line-height: 1.6;
        }
        .container-form {
            max-width: 400px;
            margin: auto;
            padding: 60px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .btn-theme {
            background-color: red;
            color: white;

        }
        .btn-theme:hover {
            background-color: darkred;
            color: white;
        }
        .error-message {
            color: red;
            font-size: 0.875rem;
            min-height: 1.25rem;
            margin-top: 0.25rem;
        }
        .btn{
            margin-bottom: 10px;
        }

    </style>
</head>
<body>

    <div class="d-flex justify-content-center align-items-center vh-100">
        <div class="container-form">
            <h2 class="text-center fw-bold">OTP Verification</h2>
            <p class="text-muted text-center">Enter the OTP sent to your email</p>
            <form id="otpForm">
                <input type="hidden" id="scenario" value="<%= scenario || 'forgot-password' %>">
                <div class="mb-3">
                    <label class="form-label">OTP</label>
                    <input type="text" class="form-control" id="otp" placeholder="Enter OTP" maxlength="6" >
                    <div id="otpError" class="error-message"></div>
                </div>
                <p class="text-center mt-3">
                    <span id="timer">Time remaining: <span id="time"><%= remainingTime %></span> seconds</span>
                </p>
                <button type="submit" class="btn btn-theme w-100">Verify OTP</button>
                <button id="resendOtpBtn" class="btn btn-theme w-100" disabled>Resend OTP</button>
            </form>

            <p class="text-center mt-3"><a href="/signin" class="text-decoration-none">Back to Sign In</a></p>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("otpForm");
            const otpField = document.getElementById("otp");
            const otpError = document.getElementById("otpError");
            const scenario = document.getElementById("scenario").value;
            const timerDisplay = document.getElementById("time");
            const resendOtpBtn = document.getElementById("resendOtpBtn");
            const verifyOtpBtn = document.querySelector("#otpForm button[type='submit']"); // More reliable way to get verify button
        
            let timeLeft = <%= remainingTime %>; 
            let timer;
        
            // Timer function
            const startTimer = () => {
                clearInterval(timer); // Clear any existing timer
                timer = setInterval(() => {
                    timeLeft--;
                    timerDisplay.textContent = timeLeft;
        
                    if (timeLeft <= 0) {
                        clearInterval(timer);
                        resendOtpBtn.disabled = false;
                        if (verifyOtpBtn) verifyOtpBtn.disabled = true;
                        timerDisplay.textContent = "0";
                    }
                }, 1000);
            };
        
            // Start initial timer
            startTimer();
        
            // Resend OTP logic
            resendOtpBtn.addEventListener("click", async function (event) {
                event.preventDefault();
                try {
                    const response = await fetch("/resend-otp2", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ scenario }),
                    });
        
                    const data = await response.json();
                    if (data.success) {
                        Swal.fire({
                            icon: "success",
                            title: "OTP Resent!",
                            text: "A new OTP has been sent to your email.",
                            showConfirmButton: false,
                            timer: 1500,
                        });
        
                        // Reset timer
                        timeLeft = 75;
                        timerDisplay.textContent = timeLeft;
                        resendOtpBtn.disabled = true;
                        if (verifyOtpBtn) verifyOtpBtn.disabled = false;
                        startTimer(); // Restart the timer
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Error!",
                            text: data.message || "Failed to resend OTP.",
                        });
                    }
                } catch (error) {
                    console.error("Resend OTP error:", error);
                    Swal.fire({
                        icon: "error",
                        title: "Error!",
                        text: "An error occurred. Please try again.",
                    });
                }
            });
        
            // OTP verification logic
            form.addEventListener("submit", async function (event) {
                event.preventDefault();
                otpError.textContent = "";
        
                const otp = otpField.value.trim();
        
                // Validate OTP
                if (!otp) {
                    otpError.textContent = "Enter OTP";
                    return;
                } else if (otp.length !== 6 || !/^\d+$/.test(otp)) {
                    otpError.textContent = "OTP must be 6 digits";
                    return;
                }
        
                // Check if timer has ended
                if (timeLeft <= 0) {
                    Swal.fire({
                        icon: "error",
                        title: "Timer Expired!",
                        text: "The timer has run out. Please click 'Resend OTP' to get a new OTP.",
                    });
                    return;
                }
        
                try {
                    const response = await fetch("/verify-otp", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ otp, scenario }),
                    });
        
                    const data = await response.json();
                    if (data.success) {
                        Swal.fire({
                            icon: "success",
                            title: "OTP Verified!",
                            text: data.message,
                            showConfirmButton: false,
                            timer: 1500,
                        }).then(() => {
                            if (scenario === "forgot-password") {
                                window.location.href = "/reset-password";
                            } else if (scenario === "change-email") {
                                window.location.href = "/profile";
                            }
                        });
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Error!",
                            text: data.message || "Invalid OTP.",
                        });
                    }
                } catch (error) {
                    console.error("Verify OTP error:", error);
                    Swal.fire({
                        icon: "error",
                        title: "Error!",
                        text: "An error occurred. Please try again.",
                    });
                }
            });
        });
        </script>
</body>
</html>