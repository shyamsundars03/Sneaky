<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="/images/sneaky.png" type="image/png">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <title>SNEAKY</title>
    <style>
/* Global Styles */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

:root {
    --primary-color: #ff0000;
    --secondary-color: #000000;
    --tertiary-color: #ffffff;
    --light-gray: #f5f5f5;
    --mid-gray: #e0e0e0;
    --dark-gray: #888888;
    --text-color: #333333;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
}

body {
    font-family: 'Poppins', sans-serif;
    background-color: #f5f5f5;
    color: var(--text-color);
    line-height: 1.6;
}

.main-container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    overflow: hidden;
    margin-top: 25px;
}

a {
    text-decoration: none;
    color: inherit;
}

ul {
    list-style: none;
}

/* Header Styles */
.main-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px 30px;
    background-color: var(--secondary-color);
    color: var(--tertiary-color);
}

.logo-container {
    display: flex;
    align-items: center;
}

.logo {
    display: flex;
    align-items: center;
}

.logo-circle {
    width: 25px;
    height: 25px;
    background-color: var(--primary-color);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-right: 10px;
}

.logo-text {
    font-weight: 700;
    letter-spacing: 1px;
}

.main-nav ul {
    display: flex;
    gap: 20px;
}

.main-nav a {
    font-weight: 500;
    transition: color 0.3s;
}

.main-nav a:hover, .main-nav a.active {
    color: var(--primary-color);
}

.header-icons {
    display: flex;
    gap: 15px;
}

.mode-toggle {
    display: inline-block;
    width: 14px;
    height: 14px;
    background-color: var(--tertiary-color);
    border-radius: 50%;
}

/* Checkout Banner */
.checkout-banner {
    background-color: var(--secondary-color);
    padding: 30px 0;
    text-align: center;
    color: var(--tertiary-color);
    position: relative;
}

.checkout-banner h1 {
    font-size: 2.5rem;
    margin-bottom: 20px;
}

.wave-divider {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 50px;
    background-color: var(--tertiary-color);
    border-radius: 100% 100% 0 0;
}

/* Checkout Container */
.checkout-container {
    max-width: 1200px;
    margin: 0 auto;
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 2rem;
    padding: 2rem;
    background: #fff;
    border-radius: 8px;
    margin-top: -2rem;
    position: relative;
    z-index: 1;
}

.checkout-left {
    flex: 1 1 60%;
    min-width: 300px;
}

.checkout-right {
    flex: 1 1 30%;
    min-width: 250px;
}

/* Progress bar */
.progress-bar {
    display: flex;
    gap: 2rem;
    margin-bottom: 2rem;
}

.progress-item {
    flex: 1;
    padding: 1rem;
    border-bottom: 2px solid #eee;
}

.progress-item.active {
    border-bottom-color: #ff0000;
}

/* Order Review */
.order-review {
    margin-bottom: 2rem;
}

.order-review h2 {
    margin-bottom: 20px;
    font-size: 1.5rem;
    font-weight: 600;
}

/* Products Table */
.products-table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 20px;
}

.products-table th {
    text-align: left;
    padding: 10px;
    border-bottom: 1px solid var(--mid-gray);
    font-weight: 500;
}

.products-table td {
    padding: 10px;
    border-bottom: 1px solid var(--mid-gray);
}

.product-info {
    display: flex;
    align-items: center;
    gap: 10px;
}

.product-info img {
    width: 60px;
    height: 60px;
    object-fit: cover;
    border-radius: 4px;
}

.delete-btn {
    color: #ff0000;
    cursor: pointer;
    font-size: 16px;
}

/* Checkout Details */
.checkout-details {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    margin: 1rem 0;
}

.detail-section {
    border: 1px solid #eee;
    padding: 1rem;
    border-radius: 8px;
    border: 1px solid red;
}

.detail-section h3 {
    margin-bottom: 10px;
    font-size: 1.1rem;
    font-weight: 500;

}

.detail-section p {
    margin-bottom: 5px;
    font-size: 0.9rem;
    color: var(--dark-gray);

    
}

/* Coupon Section */
.coupon-section {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-top: 20px;
    margin-bottom: 30px;
    width: 200px;
}

.coupon-section input {
    flex-grow: 1;
    padding: 10px;
    border: 1px solid var(--mid-gray);
    border-radius: 4px;
}

.apply-coupon-btn, .back-btn {
    background-color: #ff0000;
    color: #fff;
    border: none;
    padding: 0.8rem 1.5rem;
    border-radius: 4px;
    cursor: pointer;
    font-weight: bold;
}
.coupon-message{
    color: red;
}

/* Order Summary */
.order-summary {
            background: #f9f9f9;
            padding: 1.5rem;
            border-radius: 8px;
        }

        .order-summary h2 {
            padding-bottom: 20px;
        }

        .checkout-summary-item {
            display: flex;
            justify-content: space-between;
            /* margin-bottom: 1rem; */
            /* padding-bottom: 1rem; */
            border-bottom: 1px solid #eee;
        }

.checkout-summary-item.total {
    color: #ff0000;
    font-weight: bold;
    font-size: 1.2rem;
}

.price.discount {
    color: var(--primary-color);
}

.place-order-btn {
    background: #ff0000;
    color: #fff;
    border: none;
    padding: 0.8rem 1.5rem;
    border-radius: 4px;
    cursor: pointer;
    font-weight: bold;
    width: 100%;
    margin-top: 1rem;
}

/* Responsive Design */
@media (max-width: 992px) {
    .main-nav {
        display: none;
    }
}

@media (max-width: 768px) {
    .checkout-container {
        grid-template-columns: 1fr;
    }
    
    .checkout-details {
        grid-template-columns: 1fr;
    }
    
    .products-table {
        font-size: 0.9rem;
    }
    
    .product-info img {
        width: 40px;
        height: 40px;
    }
}

@media (max-width: 576px) {
    .progress-bar {
        flex-direction: column;
    }
    
    .coupon-section {
        flex-wrap: wrap;
    }
    
    .coupon-section input, 
    .apply-btn, 
    .back-btn {
        width: 100%;
    }
}


.products-table {
        width: 100%; /* Ensure the table takes full width */
        border-collapse: collapse; /* Collapse borders for a cleaner look */
    }

    .products-table th, .products-table td {
        padding: 10px; /* Add some padding for better spacing */
        text-align: left; /* Align text to the left */
    }

    .product-img {
        width: 50px; /* Set a fixed width for the image */
        height: 50px; /* Set a fixed height for the image */
        object-fit: cover; /* Ensure the image covers the area without distortion */
        border-radius: 4px; /* Optional: Add some border radius for rounded corners */
    }

    .product-details {
        display: flex;
        flex-direction: column; /* Stack name and price vertically */
    }

    .cart-product-name {
        font-weight: bold; /* Make the product name bold */
    }

    .cart-product-price {
        color: #333; /* Set a color for the price */
    }



    .balance-info {
        background: #f8f9fa;
        padding: 10px;
        border-radius: 5px;
        margin: 10px 0;
    }
    
    .balance-info p {
        margin: 5px 0;
        font-size: 0.9em;
    }
    
    .payment-options {
        display: flex;
        gap: 10px;
        margin-top: 15px;
    }
    
    .payment-options .btn {
        padding: 8px 15px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }
    
    .payment-options .btn:nth-child(1) {
        background: #007bff;
        color: white;
    }
    
    .payment-options .btn:nth-child(2) {
        background: #28a745;
        color: white;
    }
    #discountAmount{
        color: red;
    }
</style>





    </style>
</head>
<body>

    <%-include("../../views/partials/user/header")%>

    <div class="checkout-banner">
        <h1>CHECKOUT 3</h1>
    </div>

    <main class="main-container">
        <div class="checkout-container">
            <div class="checkout-left">
                <h2>Final Review</h2>
                <div class="progress-bar">
                    <div class="progress-item">Shipping Method</div>
                    <div class="progress-item">Payment Method</div>
                    <div class="progress-item active">Review</div>
                </div>

                <!-- Order Review Section -->
                <div class="order-review">
                    <h2>Order Review</h2>
                    <table class="products-table">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Size</th>
                                <th>Quantity</th>
                                <th>Price</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% orderItems.forEach(item => { %>
                                <tr>
                                    <td>
                                        <div class="product-info">
                                            <img src="<%= item.product.productImage %>" alt="<%= item.product.productName %>">
                                            <span><%= item.product.productName %></span>
                                        </div>
                                    </td>
                                    <td><%= item.size %></td>
                                    <td><%= item.quantity %></td>
                                    <td>₹<%= item.price.toFixed(2) %></td>
                                    <td>₹<%= (item.price * item.quantity).toFixed(2) %></td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>

                    <!-- Shipping Address, Shipping Method, and Payment Method -->
                    <div class="checkout-details">
                        <div class="detail-section">
                            <h3>Shipping Address</h3>
                            <p><%= shippingAddress.name %></p>
                            <p><%= shippingAddress.street %>, <%= shippingAddress.city %></p>
                            <p><%= shippingAddress.state %>, <%= shippingAddress.zip %>, <%= shippingAddress.country %></p>
                            <p>Phone: <%= shippingAddress.phone %></p>
                        </div>
                        <div class="detail-section">
                            <h3>Shipping Method</h3>
                            <p><%= shippingMethod %> - ₹<%= shippingCost.toFixed(2) %></p>
                        </div>
                        <div class="detail-section">
                            <h3>Payment Method</h3>
                            <p>
                                <%= paymentMethod %>
                                <% if (paymentMethod === 'Wallet') { %>
                                    (Balance: ₹<%= user.wallet.balance.toFixed(2) %>)
                                <% } %>
                            </p>
                            <% if (couponCode) { %>
                                <h3>Coupon Applied</h3>
                                <p>Code: <%= couponCode %> (₹<%= discountAmount.toFixed(2) %> off)</p>
                            <% } %>
                        </div>
                    </div>
                </div>

                <button class="back-btn" onclick="goBack()">Back</button>

            </div>

            <!-- Order Summary -->
            <div class="checkout-right">
                <div class="order-summary">
                    <h2>Your order</h2>
                    <div class="summary-item">
                        <span>Subtotal</span>
                        <span>₹<%= cartTotal %></span>
                    </div>
                    <div class="summary-item">
                        <span>Shipping & Handling</span>
                        <span>₹<%= shippingCost %></span>
                    </div>
                    <div class="summary-item">
                        <span>Coupon</span>
                        <span style="color: red;">-₹<%= discountAmount %></span>
                    </div>
                    <div class="summary-item total-row">
                        <span>Total</span>
                        <span>₹<%= totalAmount %></span>
                    </div>
                    <button class="place-order-btn" onclick="placeOrder()">Place Order</button>

                    <!-- Add this above the place order button -->


                    <!-- Update the order summary to show discount -->


                </div>
            </div>
        </div>
    </main>

    <%-include("../../views/partials/user/footer")%>

    <script>
      
      document.getElementById('place-order-btn').addEventListener('click', placeOrder);
    
        // Place order function
        async function placeOrder() {
    try {
        const swalInstance = Swal.fire({
            title: 'Processing Order',
            html: 'Please wait while we process your order...',
            allowOutsideClick: false,
            didOpen: () => Swal.showLoading()
        });

        // First validate the order
        const validationResponse = await fetch('/validate-and-place-order', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            credentials: 'include'
        });

        const validationResult = await validationResponse.json();
        
        if (!validationResult.success) {
            throw new Error(validationResult.message || 'Order validation failed');
        }

        // Prepare order data
        const orderData = {
            shippingAddress: JSON.parse('<%- JSON.stringify(shippingAddress) %>'),
            shippingMethod: '<%= shippingMethod %>',
            shippingCost: <%= shippingCost %>,
            couponCode: '<%= couponCode %>' || null,
            totalAmount: validationResult.totalAmount // Use validated total amount
        };

        let paymentResponse;
        
        if ('<%= paymentMethod %>' === 'Razorpay') {
            paymentResponse = await fetch('/process-razorpay', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(orderData),
                credentials: 'include'
            });
        } 
        else if ('<%= paymentMethod %>' === 'Wallet') {
            paymentResponse = await fetch('/process-wallet', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(orderData),
                credentials: 'include'
            });
        } 
        else { // COD
            paymentResponse = await fetch('/process-cod', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(orderData),
                credentials: 'include'
            });
        }

        const paymentResult = await paymentResponse.json();
        swalInstance.close();

        if (!paymentResult.success) {
            throw new Error(paymentResult.message || 'Payment processing failed');
        }

        // Handle Razorpay payment
        if ('<%= paymentMethod %>' === 'Razorpay') {
            handleRazorpayPayment(paymentResult);
        } 
        // For COD/Wallet, go to success page
        else {
            window.location.href = `/order-success/${paymentResult.orderId}`;
        }

    } catch (error) {
        console.error('Order Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Order Failed',
            text: error.message || 'Failed to place order',
        }).then(() => {
            if (error.message.includes('cart')) {
                window.location.href = '/cart';
            } else if (error.message.includes('wallet')) {
                window.location.href = '/checkout2';
            }
        });
    }
}

function handleRazorpayPayment(result) {
    const options = {
        key: '<%= process.env.RAZORPAY_KEY_ID %>',
        amount: Math.round(result.totalAmount * 100),
        currency: 'INR',
        name: "SNEAKY",
        description: `Order #${result.orderId}`,
        order_id: result.razorpayOrderId,
        handler: function(response) {
            console.log('Full Razorpay response:', response); // Debug log
            
            // Verify all required fields exist
            if (!response.razorpay_payment_id || !response.razorpay_order_id || !response.razorpay_signature) {
                console.error('Missing Razorpay fields:', response);
                window.location.href = `/order-failed/${result.orderId}`;
                return;
            }

            fetch('/verify-razorpay', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    razorpay_payment_id: response.razorpay_payment_id,
                    razorpay_order_id: response.razorpay_order_id,
                    razorpay_signature: response.razorpay_signature,
                    orderId: result.orderId
                }),
                credentials: 'include'
            })
            .then(res => res.json())
            .then(data => {
                console.log('Verification response:', data);
                if (data.success) {
                    window.location.href = `/order-success/${result.orderId}`;
                } else {
                    window.location.href = `/order-failed/${result.orderId}`;
                }
            })
            .catch(error => {
                console.error('Verification error:', error);
                window.location.href = `/order-failed/${result.orderId}`;
            });
        },
        modal: {
            ondismiss: function() {
                window.location.href = `/order-failed/${result.orderId}`;
            }
        },
        prefill: {
            name: '<%= user.name %>',
            email: '<%= user.email %>',
            contact: '<%= user.phone || "" %>'
        }
    };

    const rzp = new Razorpay(options);
    rzp.open();
}
  function goBack() {
    window.location.href = '/checkout2';
  }
    </script>

</body>
</html>