<!-- CSS Styles for Wallet Page -->
<style>
    /* Wallet Banner */
    .wallet-banner {
        background-color: #000;
        color: white;
        padding: 50px 0;
        text-align: center;
    }
    .view-btn{
        margin-left: 15px;
    padding: 5px 10px;
    background-color: #3399cc;
    color: white;
    border: none;
    border-radius: 4px;
    text-decoration: none;
    font-size: 14px;
    cursor: pointer;
    }
    
    .wallet-banner h1 {
        font-size: 2.5rem;
        letter-spacing: 2px;
    }
    
    /* Wallet Section */
    .wallet-section {
        background-color: #fff;
        border-radius: 20px 20px 0 0;
        margin-top: -20px;
        padding: 50px 0;
    }
    
    .wallet-content {
        display: flex;
        flex-wrap: wrap;
        gap: 30px;
    }
    
    /* Wallet Details */
    .wallet-details {
        flex: 2;
        min-width: 300px;
    }
    
    .wallet-details h2 {
        font-size: 1.8rem;
        margin-bottom: 30px;
    }
    
    .wallet-transactions {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }
    
    .transaction-card {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1.25rem;
        border-radius: 0.5rem;
        background: white;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }
    
    .transaction-info {
        display: flex;
        align-items: center;
        gap: 1rem;
        flex-grow: 1;
    }
    
    .transaction-type-icon {
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
    }
    .transaction-card.refund {
        border-left: 4px solid #27ae60;
    }
    
    .transaction-card.cancellation {
        border-left: 4px solid #e74c3c;
    }
    .transaction-card.cashback {
            border-left: 4px solid #4CAF50;
        }
        
    .transaction-card.purchase {
            border-left: 4px solid #F44336;
    }
    .cashback .transaction-type-icon {
        background-color: #e6f7ee;
        color: #27ae60;
    }
    
    .purchase .transaction-type-icon {
        background-color: #ffeaea;
        color: #e74c3c;
    }
    
    .transaction-type {
            margin: 0 0 5px 0;
            font-size: 16px;
            color: #333;
        }
    
    .transaction-details h3 {
        font-weight: 600;
        font-size: 1.15rem;
        margin: 0 0 0.25rem 0;
    }
    
    .transaction-details {
            margin-left: 15px;
        }
    
    .transaction-date {
            margin: 0 0 5px 0;
            font-size: 12px;
            color: #666;
        }
    
    .transaction-details p {
        margin: 0;
        color: #666;
        font-size: 0.9rem;
    }
    .transaction-description {
        margin: 5px 0 0 0;
            font-size: 14px;
            color: #555;
        }
    
    
    
    .transaction-amount {
        font-size: 1.25rem;
        font-weight: 600;
        margin-left: 15px;
    }
    
    .wallet-summary {
        display: flex;
        justify-content: space-between;
        margin-bottom: 20px;
        padding: 15px;
        background: #f8f9fa;
        border-radius: 8px;
    }
    
    .summary-card {
        text-align: center;
        padding: 15px;
        border-radius: 8px;
        background: white;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        flex: 1;
        margin: 0 10px;
    }
    
    .summary-card h3 {
        color: #666;
        font-size: 1rem;
        margin-bottom: 5px;
    }
    
    .summary-card .amount {
        font-size: 1.5rem;
        font-weight: bold;
    }
    
    
    .amount-positive {
        color: #27ae60;
    }
    
    .amount-negative {
        color: #e74c3c;
    }
    .no-transactions {
            text-align: center;
            padding: 20px;
            color: #666;
            font-style: italic;
        }
    
    /* Inherit sidebar styles from address page */
    .account-sidebar {
        flex: 1;
        min-width: 250px;
        max-width: 300px;
        background: #fff;
        border-radius: 15px;
        border: 2px solid rgb(181, 181, 181);
        padding: 30px;
        box-shadow: 0 0 15px rgba(0,0,0,0.1);
    }
    
    .profile-image-container {
        display: flex;
        justify-content: center;
        margin-bottom: 1rem;
    }
    
    .profile-image {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        overflow: hidden;
    }
    
    .profile-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    
    .account-name {
        text-align: center;
        font-size: 1.25rem;
        margin: 0.5rem 0;
    }
    
    .account-email {
        text-align: center;
        color: #666;
        margin-bottom: 1.5rem;
    }
    .wallet-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}
    
    .sidebar-menu {
        list-style: none;
        padding: 0;
        margin: 0;
    }
    
    .sidebar-menu li {
        margin-bottom: 0.5rem;
    }
    
    .sidebar-menu a {
        display: flex;
        align-items: center;
        padding: 0.75rem;
        border-radius: 4px;
        color: #333;
        text-decoration: none;
        transition: background-color 0.2s;
    }
    
    .sidebar-menu a:hover {
        background-color: #f5f5f5;
    }
    
    .sidebar-menu a i {
        margin-right: 0.75rem;
        width: 20px;
        text-align: center;
    }
    
    
    
        /* Wallet Pagination Styles */
        .wallet-pagination {
            display: flex;
            justify-content:end;
            gap: 8px;
            margin-top: 30px;
            padding: 20px 0;
        }
    
        .wallet-pagination-btn {
            padding: 8px 16px;
            background-color: #f5f5f5;
            color: #333;
            border: 1px solid #ddd;
            border-radius: 4px;
            text-decoration: none;
            transition: all 0.3s ease;
        }
    
        .wallet-pagination-btn:hover {
            background-color: #e9e9e9;
        }
    
        .wallet-pagination-btn.active {
            background-color: red;
            color: white;
            border-color: red;
        }
    
        .wallet-pagination-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
    
        .modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.4);
}

.modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 500px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
}

.close:hover {
    color: black;
}
    
 /* Form styles */
.form-group {
    margin-bottom: 15px;
}

.form-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
}

.form-group input {
    width: 100%;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
    box-sizing: border-box;
}

.form-group small {
    color: #777;
    font-size: 12px;
}   
    

#addMoneyBtn{
    padding: 8px 16px;
  background-color: red;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}


.view-btn {
    margin-left: 15px;
    padding: 5px 10px;
    background-color: red;
    color: white;
    border: none;
    border-radius: 4px;
    text-decoration: none;
    font-size: 14px;
    cursor: pointer;
}
    </style>



<%- include("../../views/partials/user/header") %>

<section class="wallet-banner">
    <div class="container">
        <h1>WALLET</h1>
    </div>
</section>

<section class="wallet-section">
    <div class="container">
        <div class="wallet-content">
            <!-- Sidebar -->
            <div class="account-sidebar">
                <div class="profile-image-container">
                    <div class="profile-image" onclick="window.location.href='/profile'" style="cursor: pointer;">
                        <img id="profileImg" src="<%= user.profileImage || 'https://via.placeholder.com/150' %>" alt="Profile Picture">
                    </div>
                </div>
                <h2 class="account-name"><%= user.name || '' %></h2>
                <p class="account-email"><%= user.email || '' %></p>
                <ul class="sidebar-menu">
                    <li><a href="/orders"><i class="fas fa-box"></i> Orders</a></li>
                    <li><a href="/address"><i class="fas fa-map-marker-alt"></i> Address</a></li>
                    <li><a href="/wallet"><i class="fas fa-wallet"></i> Wallet</a></li>
                    <li><a href="#" id="signOutBtn"><i class="fas fa-sign-out-alt"></i> Sign Out</a></li>
                </ul>
            </div>

            <!-- Wallet Details -->
            <div class="wallet-details">
                <div class="wallet-header">
                    <h2>My Balance - ₹<%= walletBalance || '0' %></h2>
                    <button class="btn btn-primary" id="addMoneyBtn">Add Money</button>
                </div>
                
                <!-- Add Money Modal -->
                <div id="addMoneyModal" class="modal">
                    <div class="modal-content">
                        <span class="close">&times;</span>
                        <h3>Add Money to Wallet</h3>
                        <form id="addMoneyForm">
                            <div class="form-group">
                                <label for="amount">Amount (₹)</label>
                                <input type="number" id="amount" name="amount" min="1" required>
                                <small>Minimum ₹1 required</small>
                            </div>
                            <button type="submit" class="btn btn-primary">Proceed to Payment</button>
                        </form>
                    </div>
                </div>
                
<!-- Update the transaction display section in wallet.ejs -->
<div class="wallet-transactions">
    <% if (transactions && transactions.length > 0) { %>
        <% transactions.forEach(transaction => { %>
            <div class="transaction-card 
                <%= transaction.type === 'credit' || transaction.type === 'refund' || transaction.type === 'referral' ? 
                    'cashback' : 'purchase' %>">
                <div class="transaction-info">
                    <div class="transaction-details">
                        <h3 class="transaction-type">
                            <% if (transaction.type === 'credit') { %>
                                Wallet Top-up
                            <% } else if (transaction.type === 'refund') { %>
                                Refund
                            <% } else if (transaction.type === 'referral') { %>
                                Referral Bonus
                            <% } else { %>
                                Purchase
                            <% } %>
                        </h3>
                        <p class="transaction-date">
                            <%= new Date(transaction.date).toLocaleDateString('en-US', { 
                                year: 'numeric', 
                                month: 'short', 
                                day: 'numeric',
                                hour: '2-digit',
                                minute: '2-digit'
                            }) %>
                        </p>
                        <p class="transaction-description"><%= transaction.description %></p>
                    </div>
                </div>
                <div class="transaction-amount 
                    <%= transaction.type === 'credit' || transaction.type === 'refund' || transaction.type === 'referral' ? 
                        'amount-positive' : 'amount-negative' %>">
                    <%= transaction.type === 'credit' || transaction.type === 'refund' || transaction.type === 'referral' ? '+' : '-' %>
                    ₹<%= transaction.amount %>
                </div>
              
                <% if (transaction.type === 'credit' && transaction.orderId) { %>
                    <a href="/orders/<%= transaction.extractedOrderId %>" class="view-btn"   >View Order</a>


                <% } else if ((transaction.type === 'refund' || transaction.type === 'debit') && transaction.extractedOrderId) { %>
                    <a href="/orders/<%= transaction.extractedOrderId %>" class="view-btn"   >View Order</a>



                <% } %>
            </div>
        <% }) %>
    <% } else { %>
        <p class="no-transactions">No transactions found.</p>
    <% } %>
</div>

                <% if (totalPages > 1) { %>
                    <div class="wallet-pagination">
                        <% if (currentPage > 1) { %>
                            <a href="/wallet?page=<%= currentPage - 1 %>" class="wallet-pagination-btn">Previous</a>
                        <% } %>
                
                        <% for (let i = 1; i <= totalPages; i++) { %>
                            <a href="/wallet?page=<%= i %>" class="wallet-pagination-btn <%= currentPage === i ? 'active' : '' %>">
                                <%= i %>
                            </a>
                        <% } %>
                
                        <% if (currentPage < totalPages) { %>
                            <a href="/wallet?page=<%= currentPage + 1 %>" class="wallet-pagination-btn">Next</a>
                        <% } %>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</section>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Modal functionality
        const modal = document.getElementById("addMoneyModal");
        const btn = document.getElementById("addMoneyBtn");
        const span = document.getElementsByClassName("close")[0];

        btn.onclick = function() {
            modal.style.display = "block";
        }

        span.onclick = function() {
            modal.style.display = "none";
        }

        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

        // Handle form submission
        document.getElementById("addMoneyForm").addEventListener("submit", async function(e) {
            e.preventDefault();
            
            const amount = parseFloat(document.getElementById("amount").value);
            if (isNaN(amount) || amount < 1) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Amount',
                    text: 'Please enter a valid amount (minimum ₹1)'
                });
                return;
            }

            try {
                const response = await fetch('/wallet/add-funds-razorpay', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ amount })
                });

                const data = await response.json();
                
                if (!data.success) {
                    throw new Error(data.message || 'Failed to initialize payment');
                }

                // Initialize Razorpay payment
                const options = {
                    key: data.key_id,
                    amount: data.amount,
                    currency: data.currency || "INR",
                    name: data.name || "The Sneaky Club",
                    description: data.description || "Wallet Top-up",
                    order_id: data.order_id,
                    prefill: data.prefill || {},
                    handler: async function(response) {
                        // Verify payment on server
                        const verificationResponse = await fetch('/wallet/verify-razorpay', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                razorpay_payment_id: response.razorpay_payment_id,
                                razorpay_order_id: response.razorpay_order_id,
                                razorpay_signature: response.razorpay_signature,
                                amount: amount
                            })
                        });

                        const verificationData = await verificationResponse.json();

                        if (verificationData.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success!',
                                text: `₹${amount} added to your wallet successfully`,
                                confirmButtonText: 'OK'
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Payment Failed',
                                text: verificationData.message || 'Payment verification failed'
                            });
                        }
                    },
                    theme: data.theme || {
                        color: "#3399cc"
                    },
                    modal: {
                        ondismiss: function() {
                            Swal.fire({
                                icon: 'info',
                                title: 'Payment Cancelled',
                                text: 'You cancelled the payment process'
                            });
                        }
                    }
                };

                const rzp = new Razorpay(options);
                rzp.on('payment.failed', function(response) {
                    console.error("Payment failed:", response.error);
                    let errorMessage = response.error.description || 'Your payment has failed';
                    
                    // Specific handling for international cards
                    if (response.error.code === 'BAD_REQUEST_ERROR' && 
                        response.error.reason === 'international_transaction_not_allowed') {
                        errorMessage = 'We only accept Indian payment methods. Please use an Indian card, UPI, or netbanking.';
                    }

                    Swal.fire({
                        icon: 'error',
                        title: 'Payment Failed',
                        text: errorMessage
                    });
                });
                
                rzp.open();
                modal.style.display = "none";
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'An error occurred while processing your request'
                });
            }
        });

        // Sign out button handling
        const signOutBtn = document.getElementById('signOutBtn');
        if (signOutBtn) {
            signOutBtn.addEventListener('click', function (event) {
                event.preventDefault(); // Prevent the default link behavior

                // SweetAlert2 confirmation modal
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'You are about to sign out. Do you want to continue?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, sign out!',
                    cancelButtonText: 'Cancel',
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Send a POST request to /logout
                        fetch('/logout', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                        })
                        .then(response => {
                            if (response.redirected) {
                                // Redirect to the home page after logout
                                window.location.href = response.url;
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Something went wrong while signing out!',
                            });
                        });
                    }
                });
            });
        } else {
            console.error('Error: Could not find Sign Out button.');
        }
    });
</script>

<%- include("../../views/partials/user/footer") %>