<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="/images/sneaky.png" type="image/png">
    <title>Sneaky - Single Order</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: -apple-system, system-ui, sans-serif;
        }

        :root {
            --primary-color: #ff0000;
            --text-color: #333;
            --border-color: #e1e1e1;
            --success-color: #28a745;
            --danger-color: #dc3545;
            --warning-color: #ffc107;
            --info-color: #17a2b8;
        }

        body {
            background-color: #f8f9fa;
        }

        /* Header Styles */
        header {
            background: #000;
            padding: 1rem 2rem;
        }

        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1400px;
            margin: 0 auto;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: white;
            text-decoration: none;
            font-weight: bold;
            font-size: 1.25rem;
        }

        .nav-links {
            display: flex;
            gap: 2rem;
        }

        .nav-links a {
            color: white;
            text-decoration: none;
            font-size: 0.9rem;
        }

        .sign-out {
            background: var(--primary-color);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            text-decoration: none;
            font-size: 0.9rem;
        }

        /* Hero Section */
        .hero {
            background: #000;
            color: white;
            padding: 4rem 2rem;
            position: relative;
        }

        .hero h1 {
            text-align: center;
            font-size: 2.5rem;
        }

        .wave {
            position: absolute;
            bottom: -1px;
            left: 0;
            width: 100%;
            height: 50px;
            background: white;
            border-radius: 100% 100% 0 0;
        }

        /* Main Content */
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .header-actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }

        .search-box {
            padding: 0.5rem 1rem;
            border: 1px solid var(--border-color);
            border-radius: 4px;
            width: 300px;
        }

        .order-title {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
            margin-top: 1.5rem;
        }

        /* Table Styles */
        .table-container {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th {
            background: #f8f9fa;
            padding: 1rem;
            text-align: left;
            font-weight: 600;
            color: #666;
        }

        td {
            padding: 1rem;
            border-top: 1px solid var(--border-color);
        }

        .status-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 4px;
            font-size: 0.85rem;
            display: inline-block;
            text-align: center;
        }


        .shipped {
            background: var(--success-color);
            color: white;
        }

        .pending {
            background: var(--warning-color);
            color: black;
        }

        .cancel {
            background: var(--danger-color);
            color: white;
        }

        .processing {
            background: var(--info-color);
            color: white;
        }

        .action-buttons {
            display: flex;
            gap: 0.5rem;
        }

        .action-btn {
            padding: 0.5rem;
            border: 1px solid var(--border-color);
            border-radius: 4px;
            background: white;
            cursor: pointer;
        }

        .action-btn:hover {
            background: #f8f9fa;
        }

        /* Pagination Styles */
        .pagination {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            margin-top: 1.5rem;
            gap: 0.5rem;
        }

        .pagination-text {
            margin-right: auto;
            color: #666;
            font-size: 0.9rem;
        }

        .pagination-btn {
            padding: 0.5rem 1rem;
            border: 1px solid var(--border-color);
            border-radius: 4px;
            background: white;
            cursor: pointer;
            font-size: 0.9rem;
        }

        .pagination-btn.active {
            background: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        .pagination-btn:hover:not(.active) {
            background: #f8f9fa;
        }

        /* Footer Styles */
        footer {
            background: #1e1e1e;
            color: white;
            padding: 1rem;
            text-align: center;
            font-size: 0.8rem;
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .nav-links {
                gap: 1rem;
            }

            .search-box {
                width: 200px;
            }

        }

        @media (max-width: 992px) {
            .order-details-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 768px) {
            .nav-links {
                display: none;
            }

              
            .order-header {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .status-actions {
                width: 100%;
                justify-content: space-between;
            }
            
            .products-table thead {
                display: none;
            }
            
            .products-table, .products-table tbody, .products-table tr, .products-table td {
                display: block;
                width: 100%;
            }
            
            .products-table tr {
                margin-bottom: 15px;
                border-bottom: 1px solid #eee;
            }
            
            .products-table td {
                text-align: right;
                padding: 10px;
                position: relative;
                border-bottom: none;
            }
            
            .products-table td:before {
                content: attr(data-label);
                float: left;
                font-weight: bold;
            }
            
            .product-cell {
                justify-content: flex-end;
            }

            .header-actions {
                flex-direction: column;
                gap: 1rem;
                align-items: stretch;
            }

            .search-box {
                width: 100%;
            }

            .table-container {
                margin: 0 -1rem;
            }
        }

        @media (max-width: 480px) {
            .hero h1 {
                font-size: 2rem;
            }

            .pagination {
                flex-wrap: wrap;
                justify-content: center;
            }

            .pagination-text {
                width: 100%;
                text-align: center;
                margin-bottom: 0.5rem;
            }
        }


        @media (max-width: 576px) {
            .order-details-grid {
                grid-template-columns: 1fr;
            }
        }


        .buttons {
            display: flex;
            justify-content:left;
            margin-bottom: 30px;
            margin-top: 30px;
            gap: 20px;
        }

        .btn {
            background-color: #ff0000;
            color: #fff;
            border: none;
            padding: 5px 40px;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none;
            transition: background-color 0.3s;
        }

        .btn:hover {
            background-color: #d00000;
        }


    
        /* Hero Section Styles */
        .hero {
            background-color: #000;
            color: white;
            text-align: center;
            padding: 60px 0;
            position: relative;
        }
        
        .hero h1 {
            font-size: 36px;
            letter-spacing: 2px;
        }
        
        .wave-divider {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 80px;
            background-color: white;
            border-radius: 100% 100% 0 0 / 100% 100% 0 0;
            transform: translateY(50%);
        }
        
        /* Order Content Styles */
        .order-content {
            background-color: white;
            padding: 60px 5% 40px;
            max-width: 1200px;
            margin: 0 auto;
            border-radius: 0 0 10px 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
        }
        
        .order-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            flex-wrap: wrap;
            gap: 20px;
        }
        
        .order-id {
            font-size: 18px;
            font-weight: bold;
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .status-badge {
            background-color: #f2f2f2;
            padding: 5px 15px;
            border-radius: 4px;
            font-size: 14px;
            font-weight: normal;
        }
        
        .btn {
            padding: 8px 16px;
            border-radius: 4px;
            border: none;
            cursor: pointer;
            font-size: 14px;
        }
        
        .btn-primary {
            background-color: #ff0000;
            color: white;
        }
        
        .btn-secondary {
            background-color: #f2f2f2;
            color: #333;
            margin-right: 10px;
        }
        
        .status-actions {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .status-select {
            padding: 8px;
            border-radius: 4px;
            border: 1px solid #ddd;
            min-width: 120px;
        }
        
        /* Order Details Grid */
        .order-details-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .details-box h3 {
            font-size: 16px;
            margin-bottom: 10px;
            color: #555;
        }
        
        .details-box p {
            font-size: 14px;
            margin-bottom: 5px;
        }
        
        .view-profile {
            color: #ff0000;
            font-size: 14px;
            display: inline-block;
            margin-top: 5px;
        }
        
        /* Order Products Table */
        .products-table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 30px;
        }
        
        .products-table th {
            background-color: #f2f2f2;
            text-align: left;
            padding: 12px 15px;
            font-size: 14px;
            font-weight: normal;
            color: #555;
        }
        
        .products-table td {
            padding: 15px;
            border-bottom: 1px solid #eee;
            font-size: 14px;
        }
        
        .product-cell {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .product-image {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: 4px;
        }
        
        .totals {
            text-align: right;
            font-size: 14px;
        }
        
        .totals tr td:first-child {
            padding-right: 15px;
        }
        
        .grand-total {
            font-weight: bold;
            font-size: 16px;
        }
        
        /* Payment Info */
        .payment-info {
            margin-bottom: 30px;
        }
        
        .payment-info h3 {
            font-size: 16px;
            margin-bottom: 10px;
            color: #555;
        }
        
        .payment-method {
            font-size: 14px;
            margin-bottom: 15px;
        }
        
        .action-buttons {
            display: flex;
            gap: 10px;
        }
        
        .btn-danger {
            background-color: #ff0000;
            color: white;
        }
        
        .singleadminorder-btn {
            display: inline-block;
            padding: 8px 16px;
            border-radius: 5px;
            font-size: 0.9rem;
            cursor: pointer;
            text-decoration: none;
            background-color: #ff0000;
            color: white;
            border: none;
        }

        .details-box{
            border: 1px solid red;
            border-radius: 10px;
            margin: 5px;
            padding: 10px;
        }

        .reason-section {
    margin-top: 20px;
    padding: 15px;
    border: 1px solid #ddd;
    border-radius: 5px;
    background-color: #f9f9f9;
}

.reason-section h3 {
    margin-bottom: 10px;
    font-size: 18px;
    color: #333;
}

.reason-section p {
    font-size: 16px;
    color: #555;
}



    </style>
</head>
<body>
    <header>
        <nav class="navbar">
            <div class="logo">SNEAKY</div>
            <div class="nav-links">
                <a href="/admin/dashboard">DASHBOARD</a>
                <a href="/admin/userManagement">USERS</a>
                <a href="/admin/orderManagement">ORDERS</a>
                <a href="/admin/productManagement">PRODUCTS</a>
                <a href="/admin/categoryManagement">CATEGORIES</a>
                <a href="/admin/couponManagement">COUPONS</a>
                <a href="/admin/offerManagement">OFFERS</a>
                <a href="/admin/sales">SALES REPORT</a>
            </div>
            <a href="/admin/logout" class="sign-out">Sign Out</a>
        </nav>
    </header>

    <section class="hero">
        <h1>ORDER DETAILS</h1>
        <div class="wave-divider"></div>
    </section>

    <section class="order-content">
        <!-- Order Header -->
        <div class="order-header">
            <div class="order-id">
                Order ID: #<%= order.transactionId %>
                <span class="status-badge <%= order.status.toLowerCase() %>">
                    <%= order.status %>
                </span>
            </div>
            <div class="status-actions">
                <% if (order.status !== 'Returned') { %>
                    <select class="status-select" id="statusSelect">
                        <option value="Pending" <%= order.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                        <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                        <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                        <option value="Cancelled" <%= order.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                        <option value="Returned" <%= order.status === 'Returned' ? 'selected' : '' %>>Returned</option>
                    </select>
                    <button class="singleadminorder-btn" id="saveStatusBtn">Save</button>
                <% } %>
            </div>
        </div>

        <!-- Order Details -->
        <div class="order-details-grid">
            <div class="details-box">
                <h3>Customer Details</h3>
                <p><%= order.user.name %></p>
                <p><%= order.user.email %></p>
                <p><%= order.user.phone || 'No Phone' %></p>
            </div>
            <div class="details-box">
                <h3>Shipping Address</h3>
                <p><%= order.shippingAddress.name %></p>
                <p><%= order.shippingAddress.street %></p>
                <p><%= order.shippingAddress.city %>, <%= order.shippingAddress.state %>, <%= order.shippingAddress.zip %></p>
                <p><%= order.shippingAddress.country %></p>
            </div>
            <div class="details-box">
                <h3>Order Details</h3>
                <p>Order ID: #<%= order.transactionId %></p>
                <p>Order Date: <%= order.createdAt.toLocaleDateString() %></p>
                <p>Order Total: ₹<%= order.totalAmount.toFixed(2) %></p>
            </div>
        </div>

        <!-- Products Table -->
        <table class="products-table">
            <thead>
                <tr>
                    <th>Products</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                <% order.items.forEach(item => { %>
                    <tr>
                        <td data-label="Products">
                            <div class="product-cell">
                                <% if (item.product.productImage && item.product.productImage[0]) { %>
                                    <img src="<%= item.product.productImage[0] %>" alt="<%= item.product.productName %>" class="product-image">
                                <% } else { %>
                                    <img src="/images/placeholder.jpg" alt="No image available" class="product-image">
                                <% } %>
                                <span><%= item.product.productName %></span>
                            </div>
                        </td>
                        <td data-label="Price">₹<%= item.price.toFixed(2) %></td>
                        <td data-label="Quantity"><%= item.quantity %></td>
                        <td data-label="Total">₹<%= (item.price * item.quantity).toFixed(2) %></td>
                    </tr>
                <% }) %>
            </tbody>
        </table>

        <!-- Order Totals -->
<!-- Order Totals -->
<!-- Order Totals -->
<table class="totals" align="right">
    <tr>
        <td>Sub Total :</td>
        <td>₹<%= order.subTotal.toFixed(2) %></td>
    </tr>
    <tr>
        <td>Shipping Cost :</td>
        <td>₹<%= order.shippingCost%></td>
    </tr>
    <tr class="grand-total">
        <td>Grand Total :</td>
        <td>₹<%= order.totalAmount %></td>
    </tr>
</table>

        <!-- Payment Info -->
        <div class="payment-info">
            <h3>Payment Info</h3>
            <p class="payment-method"><%= order.paymentMethod %></p>

            <% if (order.returnReason) { %>
                <div class="reason-section">
                    <h3>Reason for Return</h3>
                    <p><%= order.returnReason %></p>
                    <% if (order.status === 'Return Requested') { %>
                        <button class="singleadminorder-btn" id="verifyBtn">Verify Return</button>
                    <% } %>
                </div>
            <% } %>
            


            <div class="action-buttons">
                <a href="/admin/orderManagement" class="singleadminorder-btn">Back</a>
            </div>
        </div>
    </section>

    <footer>
        Copyright © SNEAKY 2025
    </footer>
</body>

    <script>
        // Search functionality
        document.addEventListener('DOMContentLoaded', function() {
            const searchBox = document.createElement('input');
            searchBox.type = 'text';
            searchBox.className = 'search-box';
            searchBox.placeholder = 'Search Orders...';
            
            const container = document.querySelector('.order-title');
            container.parentNode.insertBefore(searchBox, container);
            
            searchBox.addEventListener('input', function(e) {
                const searchTerm = e.target.value.toLowerCase();
                const rows = document.querySelectorAll('tbody tr');
                
                rows.forEach(row => {
                    const orderNumber = row.querySelector('td:nth-child(1)').textContent.toLowerCase();
                    const productName = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
                    const paymentMethod = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
                    const orderDate = row.querySelector('td:nth-child(4)').textContent.toLowerCase();
                    
                    if (orderNumber.includes(searchTerm) || 
                        productName.includes(searchTerm) || 
                        paymentMethod.includes(searchTerm) || 
                        orderDate.includes(searchTerm)) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });
        });

        // Pagination functionality
        document.addEventListener('DOMContentLoaded', function() {
            const paginationBtns = document.querySelectorAll('.pagination-btn');
            
            paginationBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    // Remove active class from all buttons
                    paginationBtns.forEach(b => b.classList.remove('active'));
                    
                    // Add active class to clicked button if it's a number
                    if (!isNaN(btn.textContent) && btn.textContent.trim() !== '') {
                        btn.classList.add('active');
                    }
                    
                    // Here you would typically fetch or display the appropriate page of data
                    // For demo purposes, we're just highlighting the button
                });
            });
        });
    </script>
<script>
    // Save Status Functionality
    document.getElementById('saveStatusBtn').addEventListener('click', function () {
        const status = document.getElementById('statusSelect').value;
        const orderId = '<%= order._id %>';

        fetch('/admin/update-order-status', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ orderId, status }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Order status updated successfully.',
                    confirmButtonText: 'OK',
                }).then(() => {
                    window.location.reload(); // Reload the page after the user clicks "OK"
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Failed!',
                    text: 'Failed to update order status.',
                    confirmButtonText: 'OK',
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'An error occurred. Please try again.',
                confirmButtonText: 'OK',
            });
        });
    });

    // Cancel Order Functionality
    document.getElementById('cancelOrderBtn').addEventListener('click', function () {
        const orderId = '<%= order._id %>';

        fetch('/admin/cancel-order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ orderId }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Order cancelled successfully.',
                    confirmButtonText: 'OK',
                }).then(() => {
                    window.location.reload(); // Reload the page after the user clicks "OK"
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Failed!',
                    text: 'Failed to cancel order.',
                    confirmButtonText: 'OK',
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'An error occurred. Please try again.',
                confirmButtonText: 'OK',
            });
        });
    });

    // Accept Return Request
    document.getElementById('acceptReturnBtn').addEventListener('click', function () {
        const orderId = '<%= order._id %>'; // Get order ID from EJS
        const accept = true; // Accept the return request

        fetch('/verify-return-request', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ orderId, accept }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Return request accepted. Amount refunded to user wallet.',
                    confirmButtonText: 'OK',
                }).then(() => {
                    window.location.reload(); // Reload the page after the user clicks "OK"
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Failed!',
                    text: 'Failed to accept return request.',
                    confirmButtonText: 'OK',
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'An error occurred. Please try again.',
                confirmButtonText: 'OK',
            });
        });
    });

    // Reject Return Request
    document.getElementById('rejectReturnBtn').addEventListener('click', function () {
        const orderId = '<%= order._id %>'; // Get order ID from EJS
        const accept = false; // Reject the return request

        fetch('/verify-return-request', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ orderId, accept }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: 'Return request rejected.',
                    confirmButtonText: 'OK',
                }).then(() => {
                    window.location.reload(); // Reload the page after the user clicks "OK"
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Failed!',
                    text: 'Failed to reject return request.',
                    confirmButtonText: 'OK',
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'An error occurred. Please try again.',
                confirmButtonText: 'OK',
            });
        });
    });

    // Download Invoice
    function downloadInvoice(orderId) {
        window.location.href = `/admin/download-invoice/${orderId}`;
    }



// Verify Return Functionality
document.getElementById('verifyBtn').addEventListener('click', function () {
    const orderId = '<%= order._id %>';

    Swal.fire({
        title: 'Verify Return',
        text: 'Are you sure you want to verify this return request?',
        icon: 'question',
        showCancelButton: true,
        confirmButtonText: 'Yes, verify it!',
        cancelButtonText: 'No, cancel!',
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/admin/verify-return', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ orderId }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Return Verified',
                        text: 'The return request has been verified and the order status updated.',
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Failed!',
                        text: 'Failed to verify return request.',
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'An error occurred. Please try again.',
                });
            });
        }
    });
});







</script>

</html>